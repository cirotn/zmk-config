/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENT  |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    |  [  | ESC | L1  |   | L1  | SPC  |  ]  |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &sk LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp RET
   &sk LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &sk RSHFT
                    &kp LBKT &kp ESC &sl 1   &sl 1 &kp SPACE &kp RBKT
                        >;
                };
                numpad_layer {
// -----------------------------------------------------------------------------------------
// |      |  `  |     |     |     |     |   |  /  |  7  |  8  |  9  |  0  |      |
// |      |     | LFT | UP  | DWN | RGT |   |  -  |  4  |  5  |  6  |  '  |      |
// |      |     |     | LT  |     |     |   |  =  |  1  |  2  |  3  |  \  |      |
//                    |     | L0  | LL  |   |  LL |     |     |
                        bindings = <
   &trans &kp GRAVE &trans   &trans &kp LBKT &kp RBKT    &kp FSLH  &kp N7 &kp N8 &kp N9 &kp N0   &trans
   &trans &kp Z     &kp LEFT &kp UP &kp DOWN &kp RIGHT   &kp MINUS &kp N4 &kp N5 &kp N6 &kp SQT  &trans
   &trans &trans    &trans   &to 3  &trans   &trans      &kp EQUAL &kp N1 &kp N2 &kp N3 &kp BSLH &trans
                                    &trans &to 0 &to 1   &to 1 &trans &trans
                        >;
                };
                bt_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     | BTCLR |      |
// |      |     |     |     |     |     |   |     |     |     |     |       |      |
// |      |     |     |     |     |     |   |     | BT1 | BT2 | BT3 |       |      |
//                    |     | L0  |     |   |     |     |     |
                        bindings = <
   &trans &trans &trans &trans &trans &trans   &trans &trans       &trans       &trans       &bt BT_CLR &trans
   &trans &trans &trans &trans &trans &trans   &trans &trans       &trans       &trans       &trans     &trans
   &trans &trans &trans &trans &trans &trans   &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans     &trans
                         &trans &to 0 &trans   &trans &trans &trans
                        >;
                };
                table_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |  LT |  L0 |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |  L1 |     |     |     |      |
//                    |     | L0  |     |   |     |     |     |
                        bindings = <
   &trans &trans &trans &trans &trans &trans   &trans &trans &trans &to 2  &to 0  &trans
   &trans &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans   &trans &to 1  &trans &trans &trans &trans
                         &trans &to 0 &trans   &trans &trans &trans
                        >;
                };
        };
};
